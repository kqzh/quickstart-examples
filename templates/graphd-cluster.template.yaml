AWSTemplateFormatVersion: '2010-09-09'
Description: This template deploy nbeula graphd cluster. (qs-1s1eguak1)
Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - W9006 # temporary to get rid of warnings
        - W9002 # temporary to get rid of warnings
        - W9003 # temporary to get rid of warnings
        - W9901 # Not passing all the default parameters to reduce verbosity
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - VPCID
          - PublicSubnetID
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - KeyPairName
          - GraphdInstanceType
      - Label:
          default: Graphd nodes configuration
        Parameters:
          - GraphdReplicas
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      VPCID:
        default: VPC ID
      PublicSubnetID:
        default: Public subnet ID
      KeyPairName:
        default: SSH key name
      GraphdInstanceType:
        default: Graphd servers instance type
      GraphdReplicas:
        default: Graphd nodes desired capacity
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
Parameters:
  VPCID:
    Description: ID of your existing VPC for deployment.
    Type: AWS::EC2::VPC::Id
  PublicSubnetID:
    Description: ID of public subnet 1 in Availability Zone 1 for the graphd
      (e.g., subnet-9bc642ac).
    Type: AWS::EC2::Subnet::Id
  KeyPairName:
    Description: Name of an existing EC2 key pair. All instances will launch with
      this key pair.
    Type: AWS::EC2::KeyPair::KeyName
  GraphdInstanceType:
    AllowedValues:
      - t2.small
      - t2.large
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - r3.large
      - r3.xlarge
    ConstraintDescription: Must contain valid instance type
    Default: t2.small
    Description: Type of EC2 instance for the graphd instances.
    Type: String
  GraphdReplicas:
    AllowedValues:
      - '1'
      - '2'
      - '3'
    Default: '1'
    Description: Desired capacity for the graphd nodes Auto Scaling group.
    Type: String
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-examples/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
Rules:
  KeyPairsNotEmpty:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::EachMemberEquals:
                - Fn::RefAll: AWS::EC2::KeyPair::KeyName
                - ''
        AssertDescription: All key pair parameters must not be empty
  SubnetsInVPC:
    Assertions:
      - Assert:
          Fn::EachMemberIn:
            - Fn::ValueOfAll:
                - AWS::EC2::Subnet::Id
                - VpcId
            - Fn::RefAll: AWS::EC2::VPC::Id
        AssertDescription: All subnets must in the VPC
Mappings:
  AWSAMIRegionMap:
    AMI:
      AMZNLINUXHVM: amzn-ami-hvm-2018.03.0.20190611-x86_64-gp2
    ap-northeast-1:
      AMZNLINUXHVM: ami-02ddf94e5edc8e904
    ap-northeast-2:
      AMZNLINUXHVM: ami-0ecd78c22823e02ef
    ap-south-1:
      AMZNLINUXHVM: ami-05695932c5299858a
    ap-southeast-1:
      AMZNLINUXHVM: ami-043afc2b8b6cfba5c
    ap-southeast-2:
      AMZNLINUXHVM: ami-01393ce9a3ca55d67
    ca-central-1:
      AMZNLINUXHVM: ami-0fa94ecf2fef3420b
    eu-central-1:
      AMZNLINUXHVM: ami-0ba441bdd9e494102
    eu-west-1:
      AMZNLINUXHVM: ami-0e61341fa75fcaa18
    eu-west-2:
      AMZNLINUXHVM: ami-050b8344d77081f4b
    sa-east-1:
      AMZNLINUXHVM: ami-05b7dbc290217250d
    us-east-1:
      AMZNLINUXHVM: ami-0e2ff28bfb72a4e45
    us-east-2:
      AMZNLINUXHVM: ami-0998bf58313ab53da
    us-west-1:
      AMZNLINUXHVM: ami-021bb9f371690f97a
    us-west-2:
      AMZNLINUXHVM: ami-079f731edfe27c29c
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  2GraphdCondition: !Or
    - !Equals
      - !Ref GraphdReplicas
      - '2'
    - !Condition 3GraphdCondition
  3GraphdCondition: !Equals [!Ref GraphdReplicas, '3']
Resources:
  NebulaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:GetObject
                Resource:
                  - !Sub
                    - arn:${AWS::Partition}:s3:::${S3Bucket}/${QSS3KeyPrefix}*
                    - S3Bucket: !If
                        - UsingDefaultBucket
                        - !Sub '${QSS3BucketName}-${AWS::Region}'
                        - !Ref QSS3BucketName
                Effect: Allow
          PolicyName: aws-quick-start-s3-policy
        - PolicyName: GraphdSetup
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource: '*'
              - Effect: Allow
                Action:
                  - cloudwatch:EnableAlarmActions
                  - cloudwatch:PutMetricAlarm
                Resource:
                  - !Sub arn:${AWS::Partition}:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:*
  NebulaRoleProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - Ref: NebulaRole
  GraphdSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to the Graphd instances
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 19559
          ToPort: 19559
          CidrIp: "0.0.0.0/0"
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: "0.0.0.0/0"
#  EIP1:
#    Type: 'AWS::EC2::EIP'
#    Properties:
#      InstanceId: !GetAtt GraphdInstance1.Outputs.InstanceID
#      Domain: vpc
  GraphdInstance0:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${AWS::Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/graphd.template.yaml'
        - S3Bucket: !If [ UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName ]
      Parameters:
        VPCID: !Ref VPCID
        SubnetID: !Ref PublicSubnetID
        SecurityGroupID: !Ref GraphdSecurityGroup
        IAMRoleName: !Ref NebulaRole
        IAMProfileID: !Ref NebulaRoleProfile
        KeyPairName: !Ref KeyPairName
        InstanceType: !Ref GraphdInstanceType
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
  GraphdInstance1:
    Type: AWS::CloudFormation::Stack
    Condition: 2GraphdCondition
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${AWS::Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/graphd.template.yaml'
        - S3Bucket: !If [ UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName ]
      Parameters:
        VPCID: !Ref VPCID
        SubnetID: !Ref PublicSubnetID
        SecurityGroupID: !Ref GraphdSecurityGroup
        IAMRoleName: !Ref NebulaRole
        IAMProfileID: !Ref NebulaRoleProfile
        KeyPairName: !Ref KeyPairName
        InstanceType: !Ref GraphdInstanceType
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
  GraphdInstance2:
    Type: AWS::CloudFormation::Stack
    Condition: 3GraphdCondition
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${AWS::Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/graphd.template.yaml'
        - S3Bucket: !If [ UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName ]
      Parameters:
        VPCID: !Ref VPCID
        SubnetID: !Ref PublicSubnetID
        SecurityGroupID: !Ref GraphdSecurityGroup
        IAMRoleName: !Ref NebulaRole
        IAMProfileID: !Ref NebulaRoleProfile
        KeyPairName: !Ref KeyPairName
        InstanceType: !Ref GraphdInstanceType
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
Outputs:
  GraphdInstance0ID:
    Description: GraphdInstance0 ID
    Value: !GetAtt GraphdInstance0.Outputs.InstanceID
  GraphdInstance1ID:
    Description: GraphdInstance1 ID
    Condition: 3GraphdCondition
    Value: !GetAtt GraphdInstance1.Outputs.InstanceID
  GraphdInstance2ID:
    Description: GraphdInstance2 ID
    Condition: 3GraphdCondition
    Value: !GetAtt GraphdInstance2.Outputs.InstanceID